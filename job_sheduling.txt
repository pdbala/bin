import java.util.*;
class Task {
int id;
int deadline;
int profit;
public Task(int id, int deadline, int profit) {
this.id = id;
this.deadline = deadline;
this.profit = profit;
}
}
public class TaskScheduler {
public static void main(String[] args) {
Scanner scanner = new Scanner(System.in);
System.out.print("Enter the number of tasks: ");
int numTasks = scanner.nextInt();
List<Task> tasks = new ArrayList<>();
for (int i = 0; i < numTasks; i++) {

System.out.println("Enter details for Task " + (i + 1) + ":");
System.out.print("Profit: ");
int profit = scanner.nextInt();
System.out.print("Deadline: ");
int deadline = scanner.nextInt();

tasks.add(new Task(i + 1, deadline, profit));
}

List<Task> schedule = scheduleTasks(tasks);
int totalProfit = calculateTotalProfit(schedule);
System.out.println("Scheduled tasks: ");
for (Task t : schedule) {
System.out.println("Task ID: " + t.id + ", Deadline: " + t.deadline + ", Profit: " +
t.profit);
}
System.out.println( "Task ID for sheduling:");
for (Task t : schedule) {
System.out.print( t.id +"->");
}
System.out.println(" ");
System.out.println("Total profit: " + totalProfit);
scanner.close();
}


public static List<Task> scheduleTasks(List<Task> tasks) {
tasks.sort((t1, t2) -> t2.profit - t1.profit); 
List<Task> schedule = new ArrayList<>();

boolean[] slots = new boolean[tasks.size()];
for (Task t : tasks) {
for (int i = Math.min(t.deadline, tasks.size()) - 1; i >= 0; i--) {
if (!slots[i]) {
schedule.add(t);
slots[i] = true;
break;
}
}
}
return schedule;
}


public static int calculateTotalProfit(List<Task> schedule) {
int totalProfit = 0;
for (Task t : schedule) {
totalProfit += t.profit;
}
return totalProfit;
}
}